services:
  # zookeeper:
  #   image: confluentinc/cp-zookeeper:7.4.4
  #   container_name: zookeeper
  #   hostname: zookeeper
  #   ports:
  #   - 2181:2181
  #   networks:
  #     - kafka-network
  #   environment:
  #     ZOOKEEPER_SERVER_ID: 1
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #     ZOOKEEPER_INIT_LIMIT: 5
  #     ZOOKEEPER_SYNC_LIMIT: 2
  
  nifi:
    image: apache/nifi:1.21.0
    container_name: nifi
    ports:
      - 8080:8080
    networks:
      - kafka-network
    environment:
      NIFI_WEB_HTTP_PORT: 8080
    volumes:
      - /opt/nifi_logs:/opt/nifi/nifi-current/logs
      - /opt/nifi_data:/opt/nifi/nifi-current/data
      - /opt/nifi_lib/postgresql-42.7.6.jar:/opt/nifi/nifi-current/lib/postgresql-42.7.6.jar
      - /opt/ssl/kafka-truststore.jks:/opt/nifi/nifi-current/kafka-truststore.jks

  app_producer:
    build:
      context: .
      dockerfile: docker/Dockerfile
    env_file:
      - .env
    networks:
      - kafka-network
    command: python3 producer.py
    restart: always
    deploy:
      mode: replicated
      replicas: 3

  app_consumer:
    build:
      context: .
      dockerfile: docker/Dockerfile
    env_file:
      - .env
    networks:
      - kafka-network
    command: python3 consumer.py
    restart: always
    deploy:
      mode: replicated
      replicas: 1

  postgres:
    image: debezium/postgres:16
    hostname: postgres
    container_name: postgres
    ports:
      - 127.0.0.1:5432:5432
    volumes:
      - ./postgres/user-config.conf:/etc/postgresql/postgresql.conf
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    networks:
      - kafka-network

volumes:
  nifi_logs:
  nifi_data:

networks:
  kafka-network:
    external: true