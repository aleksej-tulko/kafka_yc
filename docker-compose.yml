services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - 2181:2181
    networks:
      - kafka-network
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    volumes:
      - zookeeper_log:/var/lib/zookeeper/log
      - zookeeper_data:/var/lib/zookeeper/data
  
  nifi-1:
    image: apache/nifi:1.21.0
    container_name: nifi-1
    ports:
      - 8081:8080
      - 8441:8443
    networks:
      - kafka-network
    environment:
      AUTH: "tls"
      KEYSTORE_TYPE: PKCS12
      KEYSTORE_PASSWORD: changeit
      TRUSTSTORE_TYPE: JKS
      TRUSTSTORE_PASSWORD: changeit
      KEYSTORE_PATH: /opt/certs/nifi-1.p12
      TRUSTSTORE_PATH: /opt/certs/nifi-cluster-truststore.jks
      NIFI_WEB_HTTP_PORT: 8080
      NIFI_WEB_HTTPS_PORT: 8443
      NIFI_CLUSTER_IS_NODE: true
      NIFI_CLUSTER_NODE_PROTOCOL_PORT: 8082
      NIFI_ZK_CONNECT_STRING: zookeeper:2181
      NIFI_ELECTION_MAX_WAIT: 1 min
      NIFI_SENSITIVE_PROPS_KEY: 3e38a10eb5fb
    volumes:
      - /opt/secrets:/opt/certs
      - /opt/nifi_logs/nifi-1:/opt/nifi/nifi-current/logs
      - /opt/nifi_data/nifi-1:/opt/nifi/nifi-current/data
      - /opt/nifi_lib/postgresql-42.7.6.jar:/opt/nifi/nifi-current/lib/postgresql-42.7.6.jar
      - /opt/ssl/kafka-truststore.jks:/opt/nifi/nifi-current/kafka-truststore.jks

  nifi-2:
    image: apache/nifi:1.21.0
    container_name: nifi-2
    ports:
      - 8082:8080
      - 8442:8443
    networks:
      - kafka-network
    environment:
      AUTH: "tls"
      KEYSTORE_TYPE: PKCS12
      KEYSTORE_PASSWORD: changeit
      TRUSTSTORE_TYPE: JKS
      TRUSTSTORE_PASSWORD: changeit
      KEYSTORE_PATH: /opt/certs/nifi-2.p12
      TRUSTSTORE_PATH: /opt/certs/nifi-cluster-truststore.jks
      NIFI_WEB_HTTP_PORT: 8080
      NIFI_WEB_HTTPS_PORT: 8443
      NIFI_CLUSTER_IS_NODE: true
      NIFI_CLUSTER_NODE_PROTOCOL_PORT: 8082
      NIFI_ZK_CONNECT_STRING: zookeeper:2181
      NIFI_ELECTION_MAX_WAIT: 1 min
      NIFI_SENSITIVE_PROPS_KEY: 3e38a10eb5fb
    volumes:
      - /opt/secrets:/opt/certs
      - /opt/nifi_logs/nifi-2:/opt/nifi/nifi-current/logs
      - /opt/nifi_data/nifi-2:/opt/nifi/nifi-current/data
      - /opt/nifi_lib/postgresql-42.7.6.jar:/opt/nifi/nifi-current/lib/postgresql-42.7.6.jar
      - /opt/ssl/kafka-truststore.jks:/opt/nifi/nifi-current/kafka-truststore.jks

  nifi-3:
    image: apache/nifi:1.21.0
    container_name: nifi-2
    ports:
      - 8083:8443
      - 8443:8443
    networks:
      - kafka-network
    environment:
      AUTH: "tls"
      KEYSTORE_TYPE: PKCS12
      KEYSTORE_PASSWORD: changeit
      TRUSTSTORE_TYPE: JKS
      TRUSTSTORE_PASSWORD: changeit
      KEYSTORE_PATH: /opt/certs/nifi-3.p12
      TRUSTSTORE_PATH: /opt/certs/nifi-cluster-truststore.jks
      NIFI_WEB_HTTP_PORT: 8080
      NIFI_WEB_HTTPS_PORT: 8443
      NIFI_CLUSTER_IS_NODE: true
      NIFI_CLUSTER_NODE_PROTOCOL_PORT: 8082
      NIFI_ZK_CONNECT_STRING: zookeeper:2281
      NIFI_ELECTION_MAX_WAIT: 1 min
      NIFI_SENSITIVE_PROPS_KEY: 3e38a10eb5fb
    volumes:
      - /opt/secrets:/opt/certs
      - /opt/nifi_logs/nifi-3:/opt/nifi/nifi-current/logs
      - /opt/nifi_data/nifi-3:/opt/nifi/nifi-current/data
      - /opt/nifi_lib/postgresql-42.7.6.jar:/opt/nifi/nifi-current/lib/postgresql-42.7.6.jar
      - /opt/ssl/kafka-truststore.jks:/opt/nifi/nifi-current/kafka-truststore.jks

  app_producer:
    build:
      context: .
      dockerfile: docker/Dockerfile-app
    env_file:
      - .env
    networks:
      - kafka-network
    command: python3 producer.py
    restart: always
    deploy:
      mode: replicated
      replicas: 3

  app_consumer:
    build:
      context: .
      dockerfile: docker/Dockerfile-app
    env_file:
      - .env
    networks:
      - kafka-network
    command: python3 consumer.py
    restart: always
    deploy:
      mode: replicated
      replicas: 1

  postgres:
    image: debezium/postgres:16
    hostname: postgres
    container_name: postgres
    ports:
      - 127.0.0.1:5432:5432
    volumes:
      - ./postgres/user-config.conf:/etc/postgresql/postgresql.conf
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    networks:
      - kafka-network

  vault:
    build:
      context: .
      dockerfile: docker/Dockerfile-vault
    volumes:
      - vault_config:/vault/config
      - vault_certs:/vault/certs
      - vault_secrets:/vault/secrets
    user: 100:1000
    networks:
      - kafka-network
    container_name: vault
    environment:
      VAULT_ADDR: "http://127.0.0.1:8200"
    ports:
      - 8200:8200
    restart: always
    cap_add:
      - IPC_LOCK
    entrypoint: vault server -config /vault/config/config.hcl

volumes:
  zookeeper_log:
  zookeeper_data:
  vault_config:
  vault_certs:
  vault_secrets:

networks:
  kafka-network:
    external: true